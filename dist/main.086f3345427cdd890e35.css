@import url(https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,400;0,500;0,700;0,900;1,500;1,700&display=swap);
html, body {
  height: 100%;
  margin: 0;
  font-family: "Roboto", sans-serif;
}

a {
  text-decoration: none;
  color: inherit;
}

#spa {
  display: flex;
  flex-direction: column;
  height: 100%;
  color: #224a9a;
}

.header {
  flex: 0 0 auto;
  padding: 0.5rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
  flex-wrap: wrap;
}

.header__logo {
  font-size: 2rem;
  font-weight: bold;
}

.header__menu {
  width: 100%;
}

.menu__list {
  margin: 0;
  padding: 0;
  list-style: none;
  display: flex;
  justify-content: center;
  align-items: center;
}

.menu__item {
  display: inline-block;
  margin: 0.5rem;
  padding-left: 0.5rem;
  border-left: 0.1rem solid #dee2e4;
}

.menu__item_active {
  color: #fe8954;
}

.content {
  flex: 1 0 auto;
  padding: 0.5rem;
}

.footer {
  flex: 0 0 auto;
  padding: 0.5rem;
}

.footer {
  display: flex;
  justify-content: space-between;
  align-items: center;
  background-color: #679fe5;
  clip-path: polygon(0% 0%, 100% 20%, 100% 1000%, 0 100%);
}

.rs-link {
  display: block;
  width: 10rem;
  height: 3rem;
  background: url(assets/ad178c0df28bc133be34.svg) 0 0 no-repeat;
}

.github-links {
  display: flex;
  flex-direction: column;
  padding-left: 1rem;
}

.github-link {
  position: relative;
  margin-bottom: 0.5rem;
}

.github-link::before {
  content: "";
  display: block;
  width: 1rem;
  height: 1rem;
  position: absolute;
  left: -1rem;
  background: url(assets/7615be16eed41f806def.png) 0 0 no-repeat;
  background-size: contain;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi4wODZmMzM0NTQyN2NkZDg5MGUzNS5jc3MiLCJtYXBwaW5ncyI6IjtBQU1BO0VBQ0U7RUFDQTtFQUNBO0FDSkY7O0FES0E7RUFDRTtFQUNBO0FDRkY7O0FER0E7RUFDRTtFQUNBO0VBQ0E7RUFDQSxjQWZXO0FDZWI7O0FEQ0E7RUFDRTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QUNFRjs7QUREQTtFQUNFO0VBQ0E7QUNJRjs7QURIQTtFQUNFO0FDTUY7O0FETEE7RUFDRTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QUNRRjs7QURQQTtFQUNFO0VBQ0E7RUFDQTtFQUNBO0FDVUY7O0FEVEE7RUFDRSxjQXZDYTtBQ21EZjs7QURYQTtFQUNFO0VBQ0E7QUNjRjs7QURiQTtFQUNFO0VBQ0E7QUNnQkY7O0FDL0RBO0VBQ0U7RUFDQTtFQUNBO0VBQ0EseUJBTmlCO0VBT2pCO0FEa0VGOztBQ2hFQTtFQUNFO0VBQ0E7RUFDQTtFQUNBO0FEbUVGOztBQ2xFQTtFQUNFO0VBQ0E7RUFDQTtBRHFFRjs7QUNwRUE7RUFDRTtFQUNBO0FEdUVGOztBQ3RFQTtFQUNFO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QUR5RUYsQyIsInNvdXJjZXMiOlsid2VicGFjazovL3JzbGVuZy8uL3NyYy9zdHlsZXMvbWFpbi1wYWdlLnNhc3MiLCJ3ZWJwYWNrOi8vcnNsZW5nLy4vc3JjL3N0eWxlcy9zdHlsZS5zYXNzIiwid2VicGFjazovL3JzbGVuZy8uL3NyYy9zdHlsZXMvZm9vdGVyLnNhc3MiXSwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCB1cmwoJ2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzMj9mYW1pbHk9Um9ib3RvOml0YWwsd2dodEAwLDQwMDswLDUwMDswLDcwMDswLDkwMDsxLDUwMDsxLDcwMCZkaXNwbGF5PXN3YXAnKVxyXG5cclxuJGJsdWUtY29sb3I6ICMyMjRhOWFcclxuJGxpZ2h0LWdyZXktY29sb3I6ICNkZWUyZTRcclxuJG9yYW5nZS1jb2xvcjogI2ZlODk1NFxyXG5cclxuaHRtbCxib2R5XHJcbiAgaGVpZ2h0OiAxMDAlXHJcbiAgbWFyZ2luOiAwXHJcbiAgZm9udC1mYW1pbHk6ICdSb2JvdG8nLCBzYW5zLXNlcmlmXHJcbmFcclxuICB0ZXh0LWRlY29yYXRpb246IG5vbmVcclxuICBjb2xvcjogaW5oZXJpdFxyXG4jc3BhXHJcbiAgZGlzcGxheTogZmxleFxyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW5cclxuICBoZWlnaHQ6IDEwMCVcclxuICBjb2xvcjogJGJsdWUtY29sb3JcclxuLmhlYWRlclxyXG4gIGZsZXg6IDAgMCBhdXRvXHJcbiAgcGFkZGluZzogMC41cmVtXHJcbiAgZGlzcGxheTogZmxleFxyXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlblxyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXJcclxuICBmbGV4LXdyYXA6IHdyYXBcclxuLmhlYWRlcl9fbG9nb1xyXG4gIGZvbnQtc2l6ZTogMnJlbVxyXG4gIGZvbnQtd2VpZ2h0OiBib2xkXHJcbi5oZWFkZXJfX21lbnVcclxuICB3aWR0aDogMTAwJVxyXG4ubWVudV9fbGlzdFxyXG4gIG1hcmdpbjogMFxyXG4gIHBhZGRpbmc6IDBcclxuICBsaXN0LXN0eWxlOiBub25lXHJcbiAgZGlzcGxheTogZmxleFxyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyXHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlclxyXG4ubWVudV9faXRlbVxyXG4gIGRpc3BsYXk6IGlubGluZS1ibG9ja1xyXG4gIG1hcmdpbjogMC41cmVtXHJcbiAgcGFkZGluZy1sZWZ0OiAwLjVyZW1cclxuICBib3JkZXItbGVmdDogMC4xcmVtIHNvbGlkICRsaWdodC1ncmV5LWNvbG9yXHJcbi5tZW51X19pdGVtX2FjdGl2ZVxyXG4gIGNvbG9yOiAkb3JhbmdlLWNvbG9yXHJcbi5jb250ZW50XHJcbiAgZmxleDogMSAwIGF1dG9cclxuICBwYWRkaW5nOiAwLjVyZW1cclxuLmZvb3RlclxyXG4gIGZsZXg6IDAgMCBhdXRvXHJcbiAgcGFkZGluZzogMC41cmVtXHJcbiIsIkBpbXBvcnQgdXJsKFwiaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3MyP2ZhbWlseT1Sb2JvdG86aXRhbCx3Z2h0QDAsNDAwOzAsNTAwOzAsNzAwOzAsOTAwOzEsNTAwOzEsNzAwJmRpc3BsYXk9c3dhcFwiKTtcbmh0bWwsIGJvZHkge1xuICBoZWlnaHQ6IDEwMCU7XG4gIG1hcmdpbjogMDtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCIsIHNhbnMtc2VyaWY7XG59XG5cbmEge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGNvbG9yOiBpbmhlcml0O1xufVxuXG4jc3BhIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgaGVpZ2h0OiAxMDAlO1xuICBjb2xvcjogIzIyNGE5YTtcbn1cblxuLmhlYWRlciB7XG4gIGZsZXg6IDAgMCBhdXRvO1xuICBwYWRkaW5nOiAwLjVyZW07XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZmxleC13cmFwOiB3cmFwO1xufVxuXG4uaGVhZGVyX19sb2dvIHtcbiAgZm9udC1zaXplOiAycmVtO1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLmhlYWRlcl9fbWVudSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4ubWVudV9fbGlzdCB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5tZW51X19pdGVtIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBtYXJnaW46IDAuNXJlbTtcbiAgcGFkZGluZy1sZWZ0OiAwLjVyZW07XG4gIGJvcmRlci1sZWZ0OiAwLjFyZW0gc29saWQgI2RlZTJlNDtcbn1cblxuLm1lbnVfX2l0ZW1fYWN0aXZlIHtcbiAgY29sb3I6ICNmZTg5NTQ7XG59XG5cbi5jb250ZW50IHtcbiAgZmxleDogMSAwIGF1dG87XG4gIHBhZGRpbmc6IDAuNXJlbTtcbn1cblxuLmZvb3RlciB7XG4gIGZsZXg6IDAgMCBhdXRvO1xuICBwYWRkaW5nOiAwLjVyZW07XG59XG5cbi5mb290ZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGJhY2tncm91bmQtY29sb3I6ICM2NzlmZTU7XG4gIGNsaXAtcGF0aDogcG9seWdvbigwJSAwJSwgMTAwJSAyMCUsIDEwMCUgMTAwMCUsIDAgMTAwJSk7XG59XG5cbi5ycy1saW5rIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdpZHRoOiAxMHJlbTtcbiAgaGVpZ2h0OiAzcmVtO1xuICBiYWNrZ3JvdW5kOiB1cmwoXCIuLi9hc3NldHMvcnMuc3ZnXCIpIDAgMCBuby1yZXBlYXQ7XG59XG5cbi5naXRodWItbGlua3Mge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBwYWRkaW5nLWxlZnQ6IDFyZW07XG59XG5cbi5naXRodWItbGluayB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbWFyZ2luLWJvdHRvbTogMC41cmVtO1xufVxuXG4uZ2l0aHViLWxpbms6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogMXJlbTtcbiAgaGVpZ2h0OiAxcmVtO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IC0xcmVtO1xuICBiYWNrZ3JvdW5kOiB1cmwoXCIuLi9hc3NldHMvZ2l0aHViLnBuZ1wiKSAwIDAgbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvbnRhaW47XG59IiwiJGxpZ2h0LWJsdWUtY29sb3I6ICM2NzlmZTVcclxuXHJcbi5mb290ZXJcclxuICBkaXNwbGF5OiBmbGV4XHJcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuXHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlclxyXG4gIGJhY2tncm91bmQtY29sb3I6ICRsaWdodC1ibHVlLWNvbG9yXHJcbiAgY2xpcC1wYXRoOiBwb2x5Z29uKDAlIDAlLCAxMDAlIDIwJSwgMTAwJSAxMDAwJSwgMCAxMDAlKVxyXG5cclxuLnJzLWxpbmtcclxuICBkaXNwbGF5OiBibG9ja1xyXG4gIHdpZHRoOiAxMHJlbVxyXG4gIGhlaWdodDogM3JlbVxyXG4gIGJhY2tncm91bmQ6IHVybCgnLi4vYXNzZXRzL3JzLnN2ZycpIDAgMCBuby1yZXBlYXRcclxuLmdpdGh1Yi1saW5rc1xyXG4gIGRpc3BsYXk6IGZsZXhcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uXHJcbiAgcGFkZGluZy1sZWZ0OiAxcmVtXHJcbi5naXRodWItbGlua1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZVxyXG4gIG1hcmdpbi1ib3R0b206IDAuNXJlbVxyXG4uZ2l0aHViLWxpbms6OmJlZm9yZVxyXG4gIGNvbnRlbnQ6ICcnXHJcbiAgZGlzcGxheTogYmxvY2tcclxuICB3aWR0aDogMXJlbVxyXG4gIGhlaWdodDogMXJlbVxyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZVxyXG4gIGxlZnQ6IC0xcmVtXHJcbiAgYmFja2dyb3VuZDogdXJsKCcuLi9hc3NldHMvZ2l0aHViLnBuZycpIDAgMCBuby1yZXBlYXRcclxuICBiYWNrZ3JvdW5kLXNpemU6IGNvbnRhaW5cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9*/